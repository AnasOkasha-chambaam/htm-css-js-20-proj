<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
      * {
        padding: 0;
        margin: 0;
        box-sizing: border-box;
        /* transform-style: preserve-3d; */
        perspective: 1000px;
      }
      body {
        overflow-x: hidden;
        background-color: #333;
      }
      .container {
        width: 100%;
        min-height: 150vh;
        background-color: #333;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .circle {
        width: 111px;
        height: 111px;
        border-radius: 50%;
        background-color: #f4f4f4;
        transition: 0.4s;
        /* animation: anim 4s linear infinite; */
      }
      @keyframes anim {
        to {
          transform: rotate(360deg);
        }
      }
    </style>
    <title>Path Studing</title>
  </head>
  <body>
    <div class="container">
      <div class="circle"></div>
      <div class="circle"></div>
    </div>
    <script>
      // cmnts
      //   moveElm(elm1);
      //   function moveElm(elem, tim) {
      //     let i = 0;
      //     elem.style.transition = "transform 0s ease-in-out";
      //     function innerFunc() {
      //       if (i < 100) {
      //         setTimeout(() => {
      //           elem.style.transform = `translate3d(${i * 0.1}px, -${
      //             i * 0
      //           }px, 0px)`;
      //           console.log(elem.style.transform);
      //           console.log(getElmDimensions(elem));
      //           i = i + 1;
      //           console.log(i);
      //           innerFunc();
      //         }, (tim * 1000) / 1000);
      //       }
      //     }
      //     innerFunc();
      //   }
      //   moveElm(elm1, 0.4);
    </script>
    <script>
      let yAxis = window.innerHeight / 2,
        xAxis = window.innerWidth / 2,
        elm = document.querySelectorAll(".circle");
      function getElmDimensions(element) {
        return [
          element.getBoundingClientRect().left +
            element.getBoundingClientRect().width / 2 -
            xAxis,
          yAxis -
            element.getBoundingClientRect().bottom +
            element.getBoundingClientRect().height / 2,
        ];
      }
      function setTransOrigin(elem) {
        let dimensions = getElmDimensions(elem);
        let xCenter = elem.getBoundingClientRect().width / 2,
          yCenter = elem.getBoundingClientRect().height / 2,
          addX = 0,
          addY = 0;
        yCenter = yCenter + 0 - dimensions[1];
        xCenter =
          xCenter + (dimensions[0] > 0 ? 1 : -1) * xAxis - dimensions[0];
        console.log(xCenter, yCenter);
        elem.style.transformOrigin = `${xCenter}px  ${yCenter}px`;
      }
      elm.forEach((one) => {
        console.log(2);
        setTransOrigin(one);
      });
      window.addEventListener("scroll", function (e) {
        let scrolled = this.scrollY,
          { clientHeight, scrollHeight, scrollTop } = document.documentElement;
        console.log("Scrolled", scrolled);
        console.log("11111111111111111");
        console.log("Client Height", clientHeight);
        console.log("Scroll Height", scrollHeight);
        console.log("Scroll Top", scrollTop);
        console.log("2222222222222222222");
        elm.forEach((one) => {
          if (scrolled < 90) {
            console.log(2);
            one.style.opacity = `${(100 - scrolled) * 0.01}`;
            return (one.style.transform = `rotate(${scrolled}deg)`);
          }
          one.style.opacity = "0";
          one.style.transform = `rotate(100deg)`;
        });
      });
      function moveElm(elem) {
        let i = 0;
        elem.style.transition = "transform 0s ease-in-out";
        function innerFunc() {
          if (i < 10000) {
            setTimeout(() => {
              elem.style.transform = `translate3d(${i * 0.1}px, -${
                i * 0
              }px, 0px)`;
              console.log(elem.style.transform);
              console.log(getElmDimensions(elem));
              i = i + 1;
              console.log(i);
              innerFunc();
            }, 50);
          }
        }
        innerFunc();
      }
    </script>
  </body>
</html>
